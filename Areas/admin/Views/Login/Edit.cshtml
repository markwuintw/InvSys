@using Sys.Models
@model Sys.Models.Member

@{
    ViewBag.Title = "帳號管理列表-編輯";
}

<h2>帳號管理列表-編輯</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))  //上傳檔案要改成這個
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Member</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Salt)


        <div class="form-group">
            @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Password)
                @*@Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})*@
                <input id="Password1" name="Password1" type="password" />
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", Type = "hidden" } })
                <input name="UpImage" type="file" /> @*用name抓*@
                <span style="color:red">@ViewBag.Message</span>
                <img src="/UpFiles/@Model.Image" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ManagerType, new SelectList(Enum.GetValues(typeof(ManagerType)), ManagerType.資訊管理版))
                @Html.ValidationMessageFor(model => model.ManagerType, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Permission, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.Permission)
                    <div class="container">
                        <div class="row">
                            <div id="tree"></div>
                        </div>
                    </div>
                    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
                    <script src="/hierarchical-tree-bootree/dist/bootree.min.js" type="text/javascript"></script>
                    <script type="text/javascript">

                        $(document).ready(function () {
                            var tree = $('#tree').tree({
                                primaryKey: 'id',
                                uiLibrary: 'bootstrap',
                                dataSource: [
                                    @Html.Raw(ViewBag.chkPermission)
                                ],
                                checkboxes: true
                            });
                            tree.on('checkboxChange', function (e, $node, record, state) {
                                var checkedIds = tree.getCheckedNodes();
                                $('#Permission').val(checkedIds);
                            });

                            var per = [1,3,5];

                            var ul = document.querySelectorAll("ul");

                            per.forEach(item => {
                                ul[4].getElementsByTagName("li")[item - 1].children[0].childNodes[2].children[0].children[0]
                                    .checked = true;
                            });

                        });

                    </script>
                    <script type="text/javascript">

                    </script>
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Permission, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Permission, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Permission, "", new { @class = "text-danger" })
                @{
                    List<Permissions> permission = (ViewBag.pArray);
                }

                @foreach (var item in permission)
                {
                    if (@ViewBag.permission.ToString().IndexOf(item.Permission) > -1)
                    {
                        <input type="checkbox" name="check" id="@(item.Id)" value="@(item.Permission)" checked="checked" /><label for="@(item.Id)">@(item.Permission)</label><br /><br />
                    }
                    else
                    {
                        <input type="checkbox" name="check" id="@(item.Id)" value="@(item.Permission)" /><label for="@(item.Id)">@(item.Permission)</label><br /><br />
                    }
                }
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
