@using System.Collections
@using Sys.Models
@model Sys.Models.Member

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))  //上傳檔案要改成這個
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Member</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", Type = "File" } })
            @*@Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ManagerType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ManagerType, new SelectList(Enum.GetValues(typeof(ManagerType)), ManagerType.資訊管理版))
            @Html.ValidationMessageFor(model => model.ManagerType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Permission, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.Permission)
            <div class="container">
                <!-- <h1>Dynamic Hierarchical Tree Example</h1> -->
                <div class="row">
                    <div id="tree"></div>
                </div>
                <!-- <div class="row">
            <button id="btnSave" class="btn btn-primary">Show Checked IDs</button>
        </div> -->
            </div>
            <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
            <script src="/hierarchical-tree-bootree/dist/bootree.min.js" type="text/javascript"></script>
            <script type="text/javascript">

                $(document).ready(function () {
                    var tree = $('#tree').tree({
                        primaryKey: 'id',
                        uiLibrary: 'bootstrap',
                        //dataSource: '/Locations/Get',
                        // dataSource: [ { id: 12, text: 'foo', children: [ { id: 23, text: 'bar' } ] } ]
                        dataSource: [
                            @Html.Raw(ViewBag.chkPermission)
                        ],
                        checkboxes: true
                    });
                    tree.on('checkboxChange', function (e, $node, record, state) {
                        var checkedIds = tree.getCheckedNodes();
                        //alert(checkedIds);
                        $('#Permission').val(checkedIds);
                        //console.log(tree);
                        //console.log(checkedIds);
                    });
                });

            </script>

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Permission, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Permission, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Permission, "", new { @class = "text-danger" })
            @{
                List<Permissions> permission = (ViewBag.pArray);
            }

            @*<input type="checkbox" name="check" value="老鼠" id="老鼠" /><label for="老鼠">老鼠</label><br /><br />
                <input type="checkbox" name="check" value="大象" id="大象" /><label for="大象">大象</label><br /><br />
                <input type="checkbox" name="check" value="河馬" id="河馬" /><label for="河馬">河馬</label><br /><br />
                <input type="checkbox" name="check" value="獅子" id="獅子" /><label for="獅子">獅子</label><br /><br />
                <input type="checkbox" name="check" value="麋鹿" id="麋鹿" /><label for="麋鹿">麋鹿</label><br /><br />*@



            @foreach (var item in permission)
            {
                <input type="checkbox" name="check" id="@(item.Id)" value="@(item.Permission)" /><label for="@(item.Id)">@(item.Permission)</label><br /><br />
            }



        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
