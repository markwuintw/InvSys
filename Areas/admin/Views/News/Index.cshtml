@*@model IEnumerable<Sys.Models.News>*@
@model MvcPaging.IPagedList<Sys.Models.News>
@using MvcPaging
@using Sys.Models

@{
    ViewBag.Title = "Index";
}

<h2>最新消息管理列表</h2>

@using (Html.BeginForm()) //nullnull送給自己，form-data才可上傳檔案
{
    <div class="form-group">
        @*DROPDOWNLIST慣用法搭配Enum.GetValues(typeof(booleanType)), booleanType.否) ,booleanType.否 為預設 *@
        @*ViewBag.CategoryId = new SelectList(db.AboutLinkCatalog, "Id", "subject", aboutLink.CategoryId);   比較 ABOUTLINKSCONTRILLER*@
        @*@Html.DropDownListFor(model => model.FirstOrDefault().isOpen,new SelectList(Enum.GetValues(typeof(booleanType)) ))*@

        <label for="SearchItem">名稱：</label><input name="SearchItem" type="text" placeholder="請輸入關鍵字">
        <label for="SearchIsTop">是否置頂：</label>@Html.DropDownList("SearchIsTop", new SelectList(Enum.GetValues(typeof(BooleanType))), "請選擇")
        <label for="SearchIsHighLight">是否高亮：</label>@Html.DropDownList("SearchIsHighLight", new SelectList(Enum.GetValues(typeof(BooleanType))), "請選擇")
        <br/>
        <label for="PublishDate">發布日期：</label><input name="SDate" type="date"><span>~</span><input name="EDate" type="date">
        <br/>
        <input type="submit" value="送出">

    </div>
}


    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table data display datatable ">
        <tr style="background: #8f8f8f url(../img/table/sort_both.png) no-repeat center right;padding: 8px 5px;text-align: left;color: #fff;">
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Photo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().NewsItem)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Introduction)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Top)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().HighLight)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Content)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().viewers)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().publishDate)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().InitDate)
                </th>*@
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @*@Html.DisplayFor(modelItem => item.Photo)*@
                    <img src="/UpFiles/@item.Photo" style="width: 100px; height: 100px; align-content: center;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NewsItem)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Introduction)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Top)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HighLight)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Content)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.viewers)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.publishDate)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.InitDate)
                    </td>*@
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @*@Html.ActionLink("Details", "Details", new {id = item.Id}) |*@
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
    <div class="pager">
        @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount)
    </div>