@using Sys.Models
@model Sys.Models.News

@{
    ViewBag.Title = "最新消息管理-編輯";
}

<h2>最新消息管理-編輯</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))  //上傳檔案要改成這個
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @*<h4>News</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.InitDate)
    @Html.HiddenFor(model => model.publishDate)        
    @Html.HiddenFor(model => model.viewers)



    <div class="form-group">
        @Html.LabelFor(model => model.NewsItem, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NewsItem, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NewsItem, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Introduction, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input name="UpImage" type="file"/> @*用name抓*@
            <span style="color: red">@ViewBag.Message</span>
            <img src="/UpFiles/@Model.Photo"/>
            @Html.EditorFor(model => model.Photo, new {htmlAttributes = new {@class = "form-control", Type = "hidden"}})
            @*@Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" , Type="file" } })
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })*@
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Top, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @*@Html.EditorFor(model => model.Top)*@
                @Html.DropDownListFor(model => model.Top, new SelectList(Enum.GetValues(typeof(BooleanType)), BooleanType.否), new { style = "width:40px" })
                @Html.ValidationMessageFor(model => model.Top, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HighLight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @*@Html.EditorFor(model => model.HighLight)*@
                @Html.DropDownListFor(model => model.HighLight, new SelectList(Enum.GetValues(typeof(BooleanType)), BooleanType.否), new { style = "width:40px" })
                @Html.ValidationMessageFor(model => model.HighLight, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Content, new { id = "editor1", rows = "10", cols = "80" })
            @*@Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
        <script>
            //$(document).ready(function () {
            //    CKEDITOR.replace('editor1');
            //})
            CKEDITOR.replace('editor1', {
                //filebrowserBrowseUrl: '/ckfinder/ckfinder.html',
                filebrowserImageBrowseUrl: '/ckfinder/ckfinder.html?type=Images',
                //filebrowserFlashBrowseUrl: '/ckfinder/ckfinder.html?type=Flash',
                //filebrowserUploadUrl: '/ckfinder/core/connector/aspx/connector.aspx?command=QuickUpload&type=Files',
                filebrowserImageUploadUrl: '/ckfinder/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images',
                //filebrowserFlashUploadUrl: '/ckfinder/core/connector/aspx/connector.aspx?command=QuickUpload&type=Flash'
            });
        </script>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.viewers, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.viewers, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.viewers, "", new { @class = "text-danger" })
        </div>
    </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.publishDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.publishDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.publishDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InitDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InitDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InitDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
